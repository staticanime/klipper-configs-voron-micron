[force_move]
enable_force_move: True

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Move Z up so we don't scratch the bed
    {% if "xyz" not in printer.toolhead.homed_axes %}
       _FORCE_Z_RAISE
    {% else %}
        {% set current_z = printer.toolhead.position.z|float %}
        {% if current_z < 10 %}
            _FORCE_Z_RAISE
        {% endif %}
    {% endif %}

    # Home
    G28 X
    # Move away
    G91
    G1 X10 F1200
    G90
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Move Z up so we don't scratch the bed
    {% if "xyz" not in printer.toolhead.homed_axes %}
       _FORCE_Z_RAISE
    {% else %}
        {% set current_z = printer.toolhead.position.z|float %}
        {% if current_z < 10 %}
            _FORCE_Z_RAISE
        {% endif %}
    {% endif %}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200
    G90

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    
[gcode_macro _HOME_Z]
gcode:
    # Move Z up so we don't scratch the bed
    {% if "xyz" not in printer.toolhead.homed_axes %}
       _FORCE_Z_RAISE
    {% else %}
        {% set current_z = printer.toolhead.position.z|float %}
        {% if current_z < 5 %}
            _FORCE_Z_RAISE
        {% endif %}
    {% endif %}

    # Move to the middle of the bed
    G1 X90 Y90 F6000
    # Home
    G28 Z
    # Move away
    G90
    G1 Z10 F1500
    G90

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28 ; home if not already homed
        {% endif %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}
    
[gcode_macro _FORCE_Z_RAISE]
description: Raise Z Even When Not Homed
gcode:
    # Set Variables
    {% set height = params.HEIGHT|default(10)|int %}
    {% set speed = params.SPEED|default(20)|int %}

    # Only force raise z if necessary
    {% if "z" not in printer.toolhead.homed_axes %}
        SET_KINEMATIC_POSITION Z=0
        G91
        G0 Z{height} F{speed*60}
        G90

    # Normal z raise if z is already homed
    {% else %}
        G91
        G0 Z{height} F{speed*60}
        G90
    {% endif %}

[homing_override]
axes: xyz
gcode:
  BED_MESH_CLEAR

  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    #STATUS_HOMING
    _HOME_X
    #STATUS_READY
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    #STATUS_HOMING
    _HOME_Y
    #STATUS_READY
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    #STATUS_HOMING
    _HOME_Z
    #STATUS_READY
  {% endif %}