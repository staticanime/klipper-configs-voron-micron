{"payload":{"allShortcutsEnabled":false,"fileTree":{"macros/calibration":{"items":[{"name":"IS_shaper_calibrate.cfg","path":"macros/calibration/IS_shaper_calibrate.cfg","contentType":"file"},{"name":"IS_vibrations_measurement.cfg","path":"macros/calibration/IS_vibrations_measurement.cfg","contentType":"file"},{"name":"adaptive_bed_mesh.cfg","path":"macros/calibration/adaptive_bed_mesh.cfg","contentType":"file"},{"name":"calibrate.cfg","path":"macros/calibration/calibrate.cfg","contentType":"file"},{"name":"calibrate_flow.cfg","path":"macros/calibration/calibrate_flow.cfg","contentType":"file"},{"name":"calibrate_pa.cfg","path":"macros/calibration/calibrate_pa.cfg","contentType":"file"}],"totalCount":6},"macros":{"items":[{"name":"base","path":"macros/base","contentType":"directory"},{"name":"calibration","path":"macros/calibration","contentType":"directory"},{"name":"hardware_functions","path":"macros/hardware_functions","contentType":"directory"},{"name":"helpers","path":"macros/helpers","contentType":"directory"},{"name":"miscs","path":"macros/miscs","contentType":"directory"}],"totalCount":5},"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":"adxl_results","path":"adxl_results","contentType":"directory"},{"name":"config","path":"config","contentType":"directory"},{"name":"docs","path":"docs","contentType":"directory"},{"name":"macros","path":"macros","contentType":"directory"},{"name":"moonraker","path":"moonraker","contentType":"directory"},{"name":"scripts","path":"scripts","contentType":"directory"},{"name":"user_templates","path":"user_templates","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"install.sh","path":"install.sh","contentType":"file"}],"totalCount":12}},"fileTreeProcessingTime":8.184744,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":357818439,"defaultBranch":"main","name":"klippain","ownerLogin":"Frix-x","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2021-04-14T07:44:24.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/10575621?v=4","public":true,"private":false,"isOrgOwned":false},"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"main","listCacheKey":"v0:1691663184.0","canEdit":false,"refType":"branch","currentOid":"67f6bb91b8e54ef516c7c6e724abe913f7c41dbb"},"path":"macros/calibration/calibrate_flow.cfg","currentUser":null,"blob":{"rawLines":["#########################################","###### FLOW MULTIPLIER CALIBRATION ######","#########################################","# Written by Frix_x#0161 #","# @version: 1.6","","# CHANGELOG:","#   v1.6: directly added the [gcode_arcs] definition in this file to simplify installation","#   v1.5: moved the install notes into a proper markdown file in: docs > features > flow_calibration.md","#   v1.4: fix issue when extrude_factor is != 1","#   v1.3: fix the logging","#   v1.2: fix for those using absolute extrusion that leads to an error","#   v1.1: added part cooling fan control and some speed optimizations","#   v1.0: first flow calibration macro","","# -------------------------------------------------------------------------------------------------------------------------","# If you want to use it into your own config, please install it as a standalone macro as described in the","# installation section of this file: docs > features > flow_calibration.md","# -------------------------------------------------------------------------------------------------------------------------","","### What is it ? ###","# The main reason for this set of macros is to get a filament and slicer agnostic way to calibrate the flow extrusion multiplier.","# The goal is to make it easy to set, share and use it.","","# This macro is parametric and most of the values can be adjusted with their respective input parameters.","# It can be called without any parameters - in which case the default values would be used - or with any combination of parameters as desired.","","# Feel free to ping me on Discord (Frix_x#0161) if you need help or have any comments to improve it :)","","","# ===========================================================================================================","# DO NOT MODIFY THOSE VARIABLES (they are used internaly by the flow calibration macro)","[gcode_macro _FLOW_CALIB_VARIABLES]","variable_last_shell_thickness: 0.0","variable_last_evalue: 0.0","gcode:","","[gcode_arcs]","resolution: 0.1","","[gcode_macro FLOW_MULTIPLIER_CALIBRATION]","description: Print a small tower to calibrate the extrusion flow multiplier by measuring the shell","gcode:","    #","    # PARAMETERS","    #","    {% set do_raft = params.DO_RAFT|default(1)|int %} # whether to print a raft or not","    {% set do_retract = params.DO_RECTRACT|default(0)|int %} # whether to enable retract/unrectract on travel moves","    {% set print_size = params.PRINT_SIZE|default(40)|int %} # size of the printed object on the build plate","    {% set print_height = params.HEIGHT|default(15)|int %} # height of the printed object","    {% set corner_radius = params.CORNER_RADIUS|default(8)|int %} # radius of the corners to smooth the shell and toolpath","    {% set number_of_perimeters = params.PERIMETERS|default(2)|int %} # number of perimeters to print the shell","    {% set fan_speed = params.FAN_SPEED|default(20)|int %} # part cooling fan speed in percent (0-100)","","    {% set e_multiplier = params.EXTRUSION_MULTIPLIER|default(1.00)|float %} # extrusion multiplier for the shell","    {% set filament_diameter = params.FILAMENT_DIAMETER|default(1.75)|float %} # filament diameter","    {% set extrusion_width = params.EXTRUSION_WIDTH|default(0.4)|float %} # extrusion width goal for one line","    {% set layer_height = params.LAYER_HEIGHT|default(0.2)|float %} # layer height for the print","","    {% set retract_length = params.RETRACT_LENGTH|default(0.5)|float %} # how much to retract when traveling between print moves","    {% set initial_purge = params.PURGE_MM|default(1)|int %} # mm of filament to purge before printing. set to 0 to disable","    {% set z_hop_height  = 2 * layer_height %}","","    {% set feedrate_print = params.CONTROL_SPEED|default(100)|int * 60 %} # print feedrate","    {% set feedrate_travel = params.TRAVEL_SPEED|default(200)|int * 60 %} # travel feedrate between print moves","    {% set feedrate_raft = params.RAFT_SPEED|default(60)|int * 60 %} # print feedrate for printing raft","    {% set feedrate_z = params.Z_LIFT_SPEED|default(20)|int * 60 %} # z axis travel feedrate","    {% set feedrate_retract = params.RETRACT_SPEED|default(50)|int * 60 %} # retract and deretract feedrate","","    #","    # COMPUTED VALUES","    #","    {% set e_per_mm = ((extrusion_width - layer_height) * layer_height + 3.14159 * (layer_height / 2)**2) / (3.14159 * (filament_diameter / 2)**2) %} # computed E factor (similar to Slic3r/PrusaSlicer/SuperSlicer)","    {% set spacing = extrusion_width - layer_height * (1 - 3.14159 / 4) %} # line spacing during the print","    {% set shell_thickness = extrusion_width + (number_of_perimeters|float - 1) * spacing %} # theoric shell thickness","","    {% set max_x = printer.toolhead.axis_maximum.x|float %}","    {% set max_y = printer.toolhead.axis_maximum.y|float %}","    {% set x_start = max_x / 2 - print_size / 2 %}","    {% set y_start = max_y / 2 - print_size / 2 %}","    {% set x_end = x_start + print_size %}","    {% set y_end = y_start + print_size %}","","    {% set num_raft_lines = ([print_size, max_x]|min / spacing)|round(0, 'floor')|int %}","    {% set raft_size = num_raft_lines * spacing %}","","    #","    # STARTING...","    #","    {action_respond_info(\"\")}","    {action_respond_info(\"Starting extrusion flow calibration print\")}","    {action_respond_info(\"This operation can not be interrupted by normal means. Hit the \\\"emergency stop\\\" button to stop it if needed\")}","    {action_respond_info(\"\")}","    {action_respond_info(\"Exrusion multiplier used: %.4f\" % e_multiplier)}","    {action_respond_info(\"Number of perimeters to print: %d\" % number_of_perimeters)}","    {action_respond_info(\"THEORIC SHELL THICKNESS: %.4f\" % shell_thickness)}","    {action_respond_info(\"\")}","    {action_respond_info(\"Measure the shell thickness using a caliper or micrometer. Then call the computation macro with the measured value:\")}","    {action_respond_info(\"COMPUTE_FLOW_MULTIPLIER MEASURED_THICKNESS=xxx.xxx\")}","    {action_respond_info(\"\")}","","    SAVE_GCODE_STATE NAME=STATE_FLOW_MULTIPLIER_CALIBRATION","","    #","    # set variables for later computation","    #","    SET_GCODE_VARIABLE MACRO=_FLOW_CALIB_VARIABLES VARIABLE=last_shell_thickness VALUE={shell_thickness}","    SET_GCODE_VARIABLE MACRO=_FLOW_CALIB_VARIABLES VARIABLE=last_evalue VALUE={e_multiplier}","","    #","    # purging before raft","    #","    G90","    M83","    G92 E0.0","    G0 X{x_start} Y{y_start - 5} Z{layer_height} F{feedrate_travel} # move at the start position to do a purge line","","    G91 # use relative coordinates for the prime line","    G1 E{initial_purge} F{5 * 60}","    G1 X{raft_size} E{raft_size * e_per_mm * 1.5} F{feedrate_raft / 2} # print prime line","    G1 Y-{extrusion_width} E{extrusion_width * e_per_mm} F{feedrate_raft / 2} # move to next line","    G1 X-{raft_size} E{raft_size * e_per_mm} F{feedrate_raft / 2} # print second prime line","","    G1 E-{retract_length} F{feedrate_retract} # retract","    G0 Z{z_hop_height} F{feedrate_z} # z-hop","","    G90 # back to absolute coordinates","    G0 X{x_start} Y{y_start} F{feedrate_travel} # move to start position","    G1 Z{layer_height} F{feedrate_z} # move to print height","    G1 E{retract_length} F{feedrate_retract} # unretract","","    # set extrude_factor","    M221 S{e_multiplier * 100}","","    #","    # print the raft","    #","    {% if do_raft == 1 %}","        G91 # use relative coordinates for the raft","        {% for curr_raft_line in range(1, num_raft_lines + 2) %}","            # print a raft line with alternating direction","            G1 Y{loop.cycle(1.0, -1.0) * raft_size} E{raft_size * e_per_mm} F{feedrate_raft}","","            # spacing move","            {% if not loop.last %}","                G1 X{spacing} E{spacing * e_per_mm} F{feedrate_raft}","            {% endif %}","        {% endfor %}","","        G1 E-{retract_length} F{feedrate_retract} # retract","        G0 Z{z_hop_height} F{feedrate_z} # z-hop","        G90 # back to absolute coordinates","    {% endif %}","","    #","    # print the shell","    #","    G90","    M106 S{fan_speed * 255 / 100}","","    # for each layer","    {% for curr_layer in range(1, (print_height / layer_height)|round|int) %}","        G0 X{x_start + corner_radius} Y{y_start} F{feedrate_travel} # move to XY start position","        G1 Z{(curr_layer * layer_height) + (layer_height if do_raft == 1 else 0)} F{feedrate_z} # move to Z start position","","        # print one layer of the shell (in a for loop to do all the perimeters of one layer)","        {% for perim_num in range(number_of_perimeters) %}","            # compute values for the current perimeter (offset and radius)","            {% set perim_offset = perim_num * spacing %}","            {% set perim_radius = corner_radius - (perim_num * spacing) %}","            ","            # start position of the current perimeter","            G1 X{x_start + corner_radius} Y{y_start + perim_offset} F{feedrate_travel}","            {% if do_retract == 1 %}","                G1 E{retract_length} F{feedrate_retract} # unretract","            {% endif %}","","            # print the perimeter using the offset and radius computed","            G1 X{x_end - corner_radius} Y{y_start + perim_offset} E{(print_size - (2 * corner_radius)) * e_per_mm} F{feedrate_print}","            G3 X{x_end - perim_offset} Y{y_start + corner_radius} J{perim_radius} E{(3.14159 / 2) * perim_radius * e_per_mm} F{feedrate_print}","            G1 X{x_end - perim_offset} Y{y_end - corner_radius} E{(print_size - (2 * corner_radius)) * e_per_mm} F{feedrate_print}","            G3 X{x_end - corner_radius} Y{y_end - perim_offset} I-{perim_radius} E{(3.14159 / 2) * perim_radius * e_per_mm} F{feedrate_print}","            G1 X{x_start + corner_radius} Y{y_end - perim_offset} E{(print_size - (2 * corner_radius)) * e_per_mm} F{feedrate_print}","            G3 X{x_start + perim_offset} Y{y_end - corner_radius} J-{perim_radius} E{(3.14159 / 2) * perim_radius * e_per_mm} F{feedrate_print}","            G1 X{x_start + perim_offset} Y{y_start + corner_radius} E{(print_size - (2 * corner_radius)) * e_per_mm} F{feedrate_print}","            G3 X{x_start + corner_radius} Y{y_start + perim_offset} I{perim_radius} E{(3.14159 / 2) * perim_radius * e_per_mm} F{feedrate_print}","","            {% if do_retract == 1 %}","                G1 E-{retract_length} F{feedrate_retract} # retract","            {% endif %}","        {% endfor %}","","        {% if do_retract == 1 %}","            G91","            G0 Z{z_hop_height} F{feedrate_z}","            G90 ","        {% endif %}","    {% endfor %}","","    #","    # retract and move away","    #","    G1 E-{retract_length} F{feedrate_retract}","    G91","    G0 Z20 F{feedrate_travel}","","    RESTORE_GCODE_STATE NAME=STATE_FLOW_MULTIPLIER_CALIBRATION","","","[gcode_macro COMPUTE_FLOW_MULTIPLIER]","description: Compute a new flow multiplier by using the measured shell thickness on the calibration print","gcode:","    {% set evalue = params.OLD_EXTRUSION_MULTIPLIER|default(0.0)|float %} # extrusion multiplier used for the calibration print","    {% set theorical_thickness = params.THEORICAL_THICKNESS|default(0.0)|float %} # theorical shell thickness","    {% set measured_thickness = params.MEASURED_THICKNESS|default(0.0)|float %} # measured shell thickness on the calibration print","","    # if there is no OLD_EXTRUSION_MULTIPLIER passed as param, get the one from the last print calib run","    {% if evalue == 0.0 %}","        {% set last_evalue = printer[\"gcode_macro _FLOW_CALIB_VARIABLES\"].last_evalue %}","        ","        # then, if there is also no evalue saved from the last run, alert user","        {% if last_evalue == 0.0 %}","            {action_respond_info(\"It seems that no calibration print was run prior to this (or a restart of Klipper occured).\")}","            {action_respond_info(\"You can still manually use it by calling again this macro like that:\")}","            {action_respond_info(\"COMPUTE_FLOW_MULTIPLIER OLD_EXTRUSION_MULTIPLIER=xxx.xxx THEORICAL_THICKNESS=xxx.xxx MEASURED_THICKNESS=xxx.xxx\")}","            {action_raise_error(\"not enough data to perform the computation of the new flow !\")}","        {% else %}","            {% set final_evalue = last_evalue %}","            {action_respond_info(\"Using OLD_EXTRUSION_MULTIPLIER: %.3f\" % final_evalue)}","        {% endif %}","    {% else %}","        {% set final_evalue = evalue %}","        {action_respond_info(\"Using OLD_EXTRUSION_MULTIPLIER: %.3f\" % final_evalue)}","    {% endif %}","","    # similarly, if there is no THEORICAL_THICKNESS passed as param, get the one from the last print calib run","    {% if theorical_thickness == 0.0 %}","        {% set last_shell_thickness = printer[\"gcode_macro _FLOW_CALIB_VARIABLES\"].last_shell_thickness %}","","        # then, if there is also no evalue saved from the last run, alert user","        {% if last_shell_thickness == 0.0 %}","            {action_respond_info(\"It seems that no calibration print was run prior to this (or a restart of Klipper occured).\")}","            {action_respond_info(\"You can still manually use it by calling again this macro like that:\")}","            {action_respond_info(\"COMPUTE_FLOW_MULTIPLIER OLD_EXTRUSION_MULTIPLIER=xxx.xxx THEORICAL_THICKNESS=xxx.xxx MEASURED_THICKNESS=xxx.xxx\")}","            {action_raise_error(\"not enough data to perform the computation of the new flow !\")}","        {% else %}","            {% set final_theorical_thickness = last_shell_thickness %}","            {action_respond_info(\"Using THEORICAL_THICKNESS: %.3f\" % final_theorical_thickness)}","        {% endif %}","    {% else %}","        {% set final_theorical_thickness = theorical_thickness %}","        {action_respond_info(\"Using THEORICAL_THICKNESS: %.3f\" % final_theorical_thickness)}","    {% endif %}","","    # use the measured thickness from the user to compute a new flow value","    {% if measured_thickness == 0.0 %}","        {action_respond_info(\"You must use a caliper or micrometer to measure the calibration print shell thickness and call this macro with the measured value !!!\")}","        {action_respond_info(\"COMPUTE_FLOW_MULTIPLIER MEASURED_THICKNESS=xxx.xxx\")}","        {action_raise_error(\"not enough data to perform the computation of the new flow !\")}","    {% else %}","        {% set new_evalue = final_theorical_thickness * final_evalue / measured_thickness %}","        {action_respond_info(\"NEW COMPUTED FLOW VALUE: %.3f\" % new_evalue)}","        {action_respond_info(\"Use this new value as extrusion multiplier in your slicer of choice\")}","        {action_respond_info(\"\")}","    {% endif %}"],"stylingDirectives":[[{"start":0,"end":41,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":41,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":41,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":26,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":15,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[],[{"start":0,"end":12,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":90,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":103,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":47,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":25,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":71,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":69,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":38,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[],[{"start":0,"end":123,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":105,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":74,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":123,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[],[{"start":0,"end":20,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":129,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":55,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[],[{"start":0,"end":105,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":142,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[],[{"start":0,"end":102,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[],[],[{"start":0,"end":109,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":87,"cssClass":"pl-c"},{"start":0,"end":1,"cssClass":"pl-c"}],[{"start":0,"end":35,"cssClass":"pl-en"}],[],[],[],[],[{"start":0,"end":12,"cssClass":"pl-en"}],[],[],[{"start":0,"end":41,"cssClass":"pl-en"}],[],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":16,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":11,"end":18,"cssClass":"pl-k"},{"start":54,"end":86,"cssClass":"pl-c"},{"start":54,"end":55,"cssClass":"pl-c"}],[{"start":11,"end":21,"cssClass":"pl-k"},{"start":61,"end":115,"cssClass":"pl-c"},{"start":61,"end":62,"cssClass":"pl-c"}],[{"start":11,"end":21,"cssClass":"pl-k"},{"start":61,"end":108,"cssClass":"pl-c"},{"start":61,"end":62,"cssClass":"pl-c"}],[{"start":11,"end":23,"cssClass":"pl-k"},{"start":59,"end":89,"cssClass":"pl-c"},{"start":59,"end":60,"cssClass":"pl-c"}],[{"start":11,"end":24,"cssClass":"pl-k"},{"start":66,"end":122,"cssClass":"pl-c"},{"start":66,"end":67,"cssClass":"pl-c"}],[{"start":11,"end":31,"cssClass":"pl-k"},{"start":70,"end":111,"cssClass":"pl-c"},{"start":70,"end":71,"cssClass":"pl-c"}],[{"start":11,"end":20,"cssClass":"pl-k"},{"start":59,"end":102,"cssClass":"pl-c"},{"start":59,"end":60,"cssClass":"pl-c"}],[],[{"start":11,"end":23,"cssClass":"pl-k"},{"start":77,"end":113,"cssClass":"pl-c"},{"start":77,"end":78,"cssClass":"pl-c"}],[{"start":11,"end":28,"cssClass":"pl-k"},{"start":79,"end":98,"cssClass":"pl-c"},{"start":79,"end":80,"cssClass":"pl-c"}],[{"start":11,"end":26,"cssClass":"pl-k"},{"start":74,"end":109,"cssClass":"pl-c"},{"start":74,"end":75,"cssClass":"pl-c"}],[{"start":11,"end":23,"cssClass":"pl-k"},{"start":68,"end":96,"cssClass":"pl-c"},{"start":68,"end":69,"cssClass":"pl-c"}],[],[{"start":11,"end":25,"cssClass":"pl-k"},{"start":72,"end":128,"cssClass":"pl-c"},{"start":72,"end":73,"cssClass":"pl-c"}],[{"start":11,"end":24,"cssClass":"pl-k"},{"start":61,"end":123,"cssClass":"pl-c"},{"start":61,"end":62,"cssClass":"pl-c"}],[{"start":11,"end":23,"cssClass":"pl-k"}],[],[{"start":11,"end":25,"cssClass":"pl-k"},{"start":74,"end":90,"cssClass":"pl-c"},{"start":74,"end":75,"cssClass":"pl-c"}],[{"start":11,"end":26,"cssClass":"pl-k"},{"start":74,"end":111,"cssClass":"pl-c"},{"start":74,"end":75,"cssClass":"pl-c"}],[{"start":11,"end":24,"cssClass":"pl-k"},{"start":69,"end":103,"cssClass":"pl-c"},{"start":69,"end":70,"cssClass":"pl-c"}],[{"start":11,"end":21,"cssClass":"pl-k"},{"start":68,"end":92,"cssClass":"pl-c"},{"start":68,"end":69,"cssClass":"pl-c"}],[{"start":11,"end":27,"cssClass":"pl-k"},{"start":75,"end":107,"cssClass":"pl-c"},{"start":75,"end":76,"cssClass":"pl-c"}],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":21,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":11,"end":19,"cssClass":"pl-k"},{"start":150,"end":213,"cssClass":"pl-c"},{"start":150,"end":151,"cssClass":"pl-c"}],[{"start":11,"end":18,"cssClass":"pl-k"},{"start":75,"end":106,"cssClass":"pl-c"},{"start":75,"end":76,"cssClass":"pl-c"}],[{"start":11,"end":26,"cssClass":"pl-k"},{"start":93,"end":118,"cssClass":"pl-c"},{"start":93,"end":94,"cssClass":"pl-c"}],[],[{"start":11,"end":16,"cssClass":"pl-k"}],[{"start":11,"end":16,"cssClass":"pl-k"}],[{"start":11,"end":18,"cssClass":"pl-k"}],[{"start":11,"end":18,"cssClass":"pl-k"}],[{"start":11,"end":16,"cssClass":"pl-k"}],[{"start":11,"end":16,"cssClass":"pl-k"}],[],[{"start":11,"end":25,"cssClass":"pl-k"},{"start":73,"end":80,"cssClass":"pl-s"},{"start":73,"end":74,"cssClass":"pl-pds"},{"start":79,"end":80,"cssClass":"pl-pds"}],[{"start":11,"end":20,"cssClass":"pl-k"}],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":17,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":25,"end":27,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":26,"end":27,"cssClass":"pl-pds"}],[{"start":25,"end":68,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":67,"end":68,"cssClass":"pl-pds"}],[{"start":25,"end":91,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":90,"end":91,"cssClass":"pl-pds"},{"start":106,"end":136,"cssClass":"pl-s"},{"start":106,"end":107,"cssClass":"pl-pds"},{"start":135,"end":136,"cssClass":"pl-pds"}],[{"start":25,"end":27,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":26,"end":27,"cssClass":"pl-pds"}],[{"start":25,"end":57,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":56,"end":57,"cssClass":"pl-pds"}],[{"start":25,"end":60,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":59,"end":60,"cssClass":"pl-pds"}],[{"start":25,"end":56,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":55,"end":56,"cssClass":"pl-pds"}],[{"start":25,"end":27,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":26,"end":27,"cssClass":"pl-pds"}],[{"start":25,"end":142,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":141,"end":142,"cssClass":"pl-pds"}],[{"start":25,"end":77,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":76,"end":77,"cssClass":"pl-pds"}],[{"start":25,"end":27,"cssClass":"pl-s"},{"start":25,"end":26,"cssClass":"pl-pds"},{"start":26,"end":27,"cssClass":"pl-pds"}],[],[{"start":21,"end":25,"cssClass":"pl-k"}],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":41,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":23,"end":28,"cssClass":"pl-k"},{"start":51,"end":59,"cssClass":"pl-k"},{"start":81,"end":86,"cssClass":"pl-k"}],[{"start":23,"end":28,"cssClass":"pl-k"},{"start":51,"end":59,"cssClass":"pl-k"},{"start":72,"end":77,"cssClass":"pl-k"}],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":25,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[],[],[],[{"start":68,"end":115,"cssClass":"pl-c"},{"start":68,"end":69,"cssClass":"pl-c"}],[],[{"start":8,"end":53,"cssClass":"pl-c"},{"start":8,"end":9,"cssClass":"pl-c"}],[],[{"start":71,"end":89,"cssClass":"pl-c"},{"start":71,"end":72,"cssClass":"pl-c"}],[{"start":78,"end":97,"cssClass":"pl-c"},{"start":78,"end":79,"cssClass":"pl-c"}],[{"start":66,"end":91,"cssClass":"pl-c"},{"start":66,"end":67,"cssClass":"pl-c"}],[],[{"start":46,"end":55,"cssClass":"pl-c"},{"start":46,"end":47,"cssClass":"pl-c"}],[{"start":37,"end":44,"cssClass":"pl-c"},{"start":37,"end":38,"cssClass":"pl-c"}],[],[{"start":8,"end":38,"cssClass":"pl-c"},{"start":8,"end":9,"cssClass":"pl-c"}],[{"start":48,"end":72,"cssClass":"pl-c"},{"start":48,"end":49,"cssClass":"pl-c"}],[{"start":37,"end":59,"cssClass":"pl-c"},{"start":37,"end":38,"cssClass":"pl-c"}],[{"start":45,"end":56,"cssClass":"pl-c"},{"start":45,"end":46,"cssClass":"pl-c"}],[],[{"start":4,"end":24,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":20,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":10,"end":17,"cssClass":"pl-k"}],[{"start":12,"end":51,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[],[{"start":12,"end":58,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[],[],[{"start":12,"end":26,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[],[],[],[],[],[{"start":50,"end":59,"cssClass":"pl-c"},{"start":50,"end":51,"cssClass":"pl-c"}],[{"start":41,"end":48,"cssClass":"pl-c"},{"start":41,"end":42,"cssClass":"pl-c"}],[{"start":12,"end":42,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":21,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[],[],[],[{"start":4,"end":20,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[],[{"start":68,"end":95,"cssClass":"pl-c"},{"start":68,"end":69,"cssClass":"pl-c"}],[{"start":60,"end":67,"cssClass":"pl-k"},{"start":96,"end":122,"cssClass":"pl-c"},{"start":96,"end":97,"cssClass":"pl-c"}],[],[{"start":8,"end":92,"cssClass":"pl-c"},{"start":8,"end":9,"cssClass":"pl-c"}],[],[{"start":12,"end":74,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[{"start":19,"end":31,"cssClass":"pl-k"}],[{"start":19,"end":31,"cssClass":"pl-k"}],[],[{"start":12,"end":53,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[],[{"start":18,"end":28,"cssClass":"pl-k"}],[{"start":57,"end":68,"cssClass":"pl-c"},{"start":57,"end":58,"cssClass":"pl-c"}],[],[],[{"start":12,"end":70,"cssClass":"pl-c"},{"start":12,"end":13,"cssClass":"pl-c"}],[],[],[],[],[],[],[],[],[],[{"start":18,"end":28,"cssClass":"pl-k"}],[{"start":58,"end":67,"cssClass":"pl-c"},{"start":58,"end":59,"cssClass":"pl-c"}],[],[],[],[{"start":14,"end":24,"cssClass":"pl-k"}],[],[],[],[],[],[],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":4,"end":5,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[],[],[],[],[{"start":24,"end":28,"cssClass":"pl-k"}],[],[],[{"start":0,"end":37,"cssClass":"pl-en"}],[],[],[{"start":11,"end":17,"cssClass":"pl-k"},{"start":74,"end":127,"cssClass":"pl-c"},{"start":74,"end":75,"cssClass":"pl-c"}],[{"start":11,"end":30,"cssClass":"pl-k"},{"start":82,"end":109,"cssClass":"pl-c"},{"start":82,"end":83,"cssClass":"pl-c"}],[{"start":11,"end":29,"cssClass":"pl-k"},{"start":80,"end":131,"cssClass":"pl-c"},{"start":80,"end":81,"cssClass":"pl-c"}],[],[{"start":4,"end":104,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":10,"end":16,"cssClass":"pl-k"}],[{"start":15,"end":26,"cssClass":"pl-k"},{"start":37,"end":72,"cssClass":"pl-s"},{"start":37,"end":38,"cssClass":"pl-pds"},{"start":71,"end":72,"cssClass":"pl-pds"}],[],[{"start":8,"end":78,"cssClass":"pl-c"},{"start":8,"end":9,"cssClass":"pl-c"}],[{"start":14,"end":25,"cssClass":"pl-k"}],[{"start":33,"end":126,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":125,"end":126,"cssClass":"pl-pds"}],[{"start":33,"end":103,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":102,"end":103,"cssClass":"pl-pds"}],[{"start":33,"end":146,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":145,"end":146,"cssClass":"pl-pds"}],[{"start":32,"end":94,"cssClass":"pl-s"},{"start":32,"end":33,"cssClass":"pl-pds"},{"start":93,"end":94,"cssClass":"pl-pds"}],[],[{"start":19,"end":31,"cssClass":"pl-k"}],[{"start":33,"end":71,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":70,"end":71,"cssClass":"pl-pds"}],[],[],[{"start":15,"end":27,"cssClass":"pl-k"}],[{"start":29,"end":67,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":66,"end":67,"cssClass":"pl-pds"}],[],[],[{"start":4,"end":110,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":10,"end":29,"cssClass":"pl-k"}],[{"start":15,"end":35,"cssClass":"pl-k"},{"start":46,"end":81,"cssClass":"pl-s"},{"start":46,"end":47,"cssClass":"pl-pds"},{"start":80,"end":81,"cssClass":"pl-pds"}],[],[{"start":8,"end":78,"cssClass":"pl-c"},{"start":8,"end":9,"cssClass":"pl-c"}],[{"start":14,"end":34,"cssClass":"pl-k"}],[{"start":33,"end":126,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":125,"end":126,"cssClass":"pl-pds"}],[{"start":33,"end":103,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":102,"end":103,"cssClass":"pl-pds"}],[{"start":33,"end":146,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":145,"end":146,"cssClass":"pl-pds"}],[{"start":32,"end":94,"cssClass":"pl-s"},{"start":32,"end":33,"cssClass":"pl-pds"},{"start":93,"end":94,"cssClass":"pl-pds"}],[],[{"start":19,"end":44,"cssClass":"pl-k"}],[{"start":33,"end":66,"cssClass":"pl-s"},{"start":33,"end":34,"cssClass":"pl-pds"},{"start":65,"end":66,"cssClass":"pl-pds"}],[],[],[{"start":15,"end":40,"cssClass":"pl-k"}],[{"start":29,"end":62,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":61,"end":62,"cssClass":"pl-pds"}],[],[],[{"start":4,"end":74,"cssClass":"pl-c"},{"start":4,"end":5,"cssClass":"pl-c"}],[{"start":10,"end":28,"cssClass":"pl-k"}],[{"start":29,"end":164,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":163,"end":164,"cssClass":"pl-pds"}],[{"start":29,"end":81,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":80,"end":81,"cssClass":"pl-pds"}],[{"start":28,"end":90,"cssClass":"pl-s"},{"start":28,"end":29,"cssClass":"pl-pds"},{"start":89,"end":90,"cssClass":"pl-pds"}],[],[{"start":15,"end":25,"cssClass":"pl-k"}],[{"start":29,"end":60,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":59,"end":60,"cssClass":"pl-pds"}],[{"start":29,"end":98,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":97,"end":98,"cssClass":"pl-pds"}],[{"start":29,"end":31,"cssClass":"pl-s"},{"start":29,"end":30,"cssClass":"pl-pds"},{"start":30,"end":31,"cssClass":"pl-pds"}],[]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/Frix-x/klippain/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/Frix-x/klippain/security/dependabot","repoSecurityAndAnalysisPath":"/Frix-x/klippain/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"calibrate_flow.cfg","displayUrl":"https://github.com/Frix-x/klippain/blob/main/macros/calibration/calibrate_flow.cfg?raw=true","headerInfo":{"blobSize":"13.9 KB","deleteInfo":{"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"871f28f","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FFrix-x%2Fklippain%2Fblob%2Fmain%2Fmacros%2Fcalibration%2Fcalibrate_flow.cfg","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"265","truncatedSloc":"223"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"INI","languageID":163,"large":false,"loggedIn":false,"newDiscussionPath":"/Frix-x/klippain/discussions/new","newIssuePath":"/Frix-x/klippain/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/Frix-x/klippain/blob/main/macros/calibration/calibrate_flow.cfg","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/Frix-x/klippain/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"Frix-x","repoName":"klippain","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":true,"symbols":[]}},"copilotInfo":null,"csrf_tokens":{"/Frix-x/klippain/branches":{"post":"BrfYIz6_SdxtEu0TE821-i7YNUIYoprQ0PNTzcS0O3SkKRWJFoE_2HvoSkfBme0pUsYMpMfX4wtmHcdwExPrmw"},"/repos/preferences":{"post":"U4T8HBSI2v6f2UWu1n757_iBa_MevDolthWkOkenEFmACkXF8agMrktY5m95d9Tu7gY7YyfDeMkMFGR39arWbg"}}},"title":"klippain/macros/calibration/calibrate_flow.cfg at main · Frix-x/klippain"}